(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{179:function(t,s,e){"use strict";e.r(s);var a=e(0),r=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),e("p",[t._v("参考 "),e("a",{attrs:{href:"https://blog.csdn.net/caib1109/article/details/51756246",target:"_blank",rel:"noopener noreferrer"}},[t._v("8小时外实践系列(六) - 在阿里云服务器上搭建GitLab(草稿) - CSDN博客"),e("OutboundLink")],1)]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),e("p",[t._v("一般需要配置的有：")]),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),e("p",[t._v("gogs 不像 gitlab 那样吃性能，功能也很完善，不过 gogs 需要有额外的数据库依赖，如 MySQL。具体的部署方式参考以下两篇文章：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/5f5e419b5de8",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker安装mysql - 简书"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/2a7acb07b352",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker安装gogs - 简书"),e("OutboundLink")],1)]),t._v(" "),t._m(13),t._v(" "),e("p",[t._v("我的容器启动代码如下：")]),t._v(" "),t._m(14),e("p",[t._v("此时访问服务器的 3000 端口即可进入设置界面，记住要把 localhost 全部改成服务器ip。")]),t._v(" "),t._m(15),t._v(" "),e("p",[t._v("首先由于本例使用了 docker network，所以可以直接使用 容器名:端口 来访问，例如 mysql57:3306。")]),t._v(" "),e("p",[t._v("另外我们需要在 mysql 容器中创建一个数据库，否则 gogs 无法完成设置。")]),t._v(" "),t._m(16),e("p",[t._v("接着在 mysql 命令行中创建数据库，gogs 默认数据库名就是 gogs")]),t._v(" "),t._m(17),e("p",[t._v("接着我们在网页中就可以完成 gogs 的初始化设置了。")]),t._v(" "),e("p",[t._v("如果想要使用 gogs，首先我们要注册一个账号，注意第一个注册的账号默认是拥有最高权限的账号。")]),t._v(" "),t._m(18),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("参考：")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://blog.csdn.net/caib1109/article/details/51756246",target:"_blank",rel:"noopener noreferrer"}},[t._v("8小时外实践系列(六) - 在阿里云服务器上搭建GitLab(草稿) - CSDN博客"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/5f5e419b5de8",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker安装mysql - 简书"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/2a7acb07b352",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker安装gogs - 简书"),e("OutboundLink")],1)])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"ecs-上的-git-管理工具踩坑记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ecs-上的-git-管理工具踩坑记","aria-hidden":"true"}},[this._v("#")]),this._v(" ECS 上的 git 管理工具踩坑记")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"gitlab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitlab","aria-hidden":"true"}},[this._v("#")]),this._v(" gitlab")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"在-centos-上安装-gitlab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-centos-上安装-gitlab","aria-hidden":"true"}},[this._v("#")]),this._v(" 在 CentOS 上安装 gitlab")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("gitlab 非常吃性能，在1核1G的服务器上安装后会导致机子非常卡，同时域名/IP访问也会出现502，查资料之后发现是配置太低的问题。官方推荐的配置是2核心8G内存，我们普通个人用户显然难以支付这么昂贵的服务器配置，更不用说海外主机了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用-docker-部署-gitlab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-部署-gitlab","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 docker 部署 gitlab")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("只需要在 docker hub 中 "),s("code",[this._v("docker pull gitlab/gitlab-ce")]),this._v(" 就行，然后我启动容器的的代码如下：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[this._v("sudo")]),this._v(" docker run --detach \\ \n  --hostname gitlab.mydomain.com \\ \n  --publish 8443:443 --publish 80:80 --publish 2222:22 \\ \n  --name gitlab \\ \n  --restart always \\ \n  --volume /srv/gitlab/config:/etc/gitlab \\ \n  --volume /srv/gitlab/logs:/var/log/gitlab \\ \n  --volume /srv/gitlab/data:/var/opt/gitlab \\ \n  gitlab/gitlab-ce\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如需修改 gitlab.rb 的配置，只需要 "),s("code",[this._v("vim /srv/gitlab/config/gitlab.rb")]),this._v(" 。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("external_url "),e("span",{attrs:{class:"token string"}},[t._v("'你的域名或者IP'")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("# 改成你的域名或者 IP，如果你的端口映射不是 80，那也不能在这里加端口")]),t._v("\ngitlab_rails"),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v("'gitlab_shell_ssh_port'")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 2222 "),e("span",{attrs:{class:"token comment"}},[t._v("# 防止和本机 22 端口冲突")]),t._v("\nunicorn"),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v("'port'")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 8999 "),e("span",{attrs:{class:"token comment"}},[t._v("# 如果你的 8080 端口被占用的话")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("另外记住，如果单开某个端口，需要在 ECS 实例的安全组中允许这个端口被某个或者某些 IP 访问。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("配置完成之后需要在容器中 reconfigure: "),s("code",[this._v("docker exec -it gitlab gitlab-ctl reconfigure")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("然而我按照上面的方式完成之后，通过域名或者 IP 进入仍是 502。\n后来我尝试了在不同机子上部署。例如在群辉 DS218+ 上用同样的方式配置会出现 容器意外停止 的问题；在我的 iMac 本机上用 docker 部署就可以正常访问和进行代码管理")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"gogs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gogs","aria-hidden":"true"}},[this._v("#")]),this._v(" gogs")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("勘误：在《docker安装mysql - 简书》中，创建网络的命令不是 "),s("code",[this._v("docker create network backend")]),this._v(" 而是 "),s("code",[this._v("docker network create backend")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token comment"}},[t._v("# 启动 MySQL")]),t._v("\ndocker run -d --name mysql57 \\\n--net"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("backend \\ "),e("span",{attrs:{class:"token comment"}},[t._v("# 加入创建的 backend 网络中")]),t._v("\n-p 3306:3306 \\\n-e MYSQL_ROOT_PASSWORD"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("root \\\n-v /srv/mysql/data:/var/lib/mysql \\\n-v /srv/mysql/conf:/etc/mysql/conf.d \\\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 启动 gogs")]),t._v("\ndocker run -d \\\n-p 10022:22 -p 3000:3000 \\\n--name"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("gogs \\\n--net"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("backend \\ "),e("span",{attrs:{class:"token comment"}},[t._v("# 加入创建的 backend 网络中")]),t._v("\n-v /srv/gogs/:/data gogs/gogs\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"关于-gogs-的数据库设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-gogs-的数据库设置","aria-hidden":"true"}},[this._v("#")]),this._v(" 关于 gogs 的数据库设置")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("docker "),s("span",{attrs:{class:"token function"}},[this._v("exec")]),this._v(" -it mysql57 /bin/bash\nmysql -u root -p\n"),s("span",{attrs:{class:"token comment"}},[this._v("# 然后输入密码，如果你没更改密码，则密码是 root")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[this._v("CREATE")]),this._v(" "),s("span",{attrs:{class:"token keyword"}},[this._v("DATABASE")]),this._v(" gogs"),s("span",{attrs:{class:"token punctuation"}},[this._v(";")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在实际使用中，我遇到了 git clone 时发现有 not a repository 的问题，可能是IP/域名、端口等等设置的问题，仍在研究中")])])}],!1,null,null,null);r.options.__file="remote-private-git-first-look.md";s.default=r.exports}}]);