(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{164:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"前后端分离项目在阿里云-七牛云的简单部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离项目在阿里云-七牛云的简单部署","aria-hidden":"true"}},[t._v("#")]),t._v(" 前后端分离项目在阿里云/七牛云的简单部署")]),t._v(" "),a("h2",{attrs:{id:"购买主机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#购买主机","aria-hidden":"true"}},[t._v("#")]),t._v(" 购买主机")]),t._v(" "),a("p",[t._v("我购买了两台主机，都是的是1核 + 1GHz + 1Mbps 的配置，系统一台是为 Ubuntu 14.04，另一台是 CentOS 7.4。直连实测 700 多 KB 的 Webpack 生产打包后的 React 的 js 文件需要十多秒才能加载，速度大约 60KB/s。")]),t._v(" "),a("h2",{attrs:{id:"启动实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动实例","aria-hidden":"true"}},[t._v("#")]),t._v(" 启动实例")]),t._v(" "),a("p",[t._v("购买后实例是自动启动的，但是需要进行一些初始化的设置。")]),t._v(" "),a("p",[t._v("进入 ECS 的实例页面，首先如果需要从控制台远程连接，阿里云会提供一个远程连接密码，这个密码需要记住，每次从控制台远程连接时会需要。")]),t._v(" "),a("p",[t._v("我们正常的开发一般是从 Terminal 或者 FileZilla 等 SFTP 客户端去连接服务器，为了进行此操作，我们需要设置初始密码。控制台的实例页面点击 “更多” => “密码/密钥” => “重置密码” 即可重置 Linux 登录密码，也是 ssh 的密码。重置后我们就可以使用刚刚输入的密码，通过 "),a("code",[t._v("ssh root@${yourServerIp}")]),t._v(" 登陆。如果你已经在购买的 ECS 时候设置了密码或者密钥，那可以不需要在此设置密码。")]),t._v(" "),a("p",[t._v("而 FileZilla 也是一样，建立一个 SFTP 连接，使用用户 root 和更改好的密码即可。")]),t._v(" "),a("h2",{attrs:{id:"系统配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 系统配置")]),t._v(" "),a("p",[t._v("首先我们需要把包管理器源替换成国内的源，Ubuntu 的 apt 可以使用清华的源，CentOS 的 yum 可以使用阿里云的源。")]),t._v(" "),a("ol",[a("li",[t._v("Ubuntu")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" /etc/apt/\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("cp")]),t._v(" sources.list sources.list.bak  "),a("span",{attrs:{class:"token comment"}},[t._v("# 备份 source.list")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" vim sources.list\n")])])]),a("p",[t._v("接着将 source.list 中的源替换为清华的源")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释")]),t._v("\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse\n"),a("span",{attrs:{class:"token comment"}},[t._v("# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse")]),t._v("\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\n"),a("span",{attrs:{class:"token comment"}},[t._v("# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse")]),t._v("\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\n"),a("span",{attrs:{class:"token comment"}},[t._v("# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse")]),t._v("\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\n"),a("span",{attrs:{class:"token comment"}},[t._v("# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 预发布软件源，不建议启用")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse")]),t._v("\n")])])]),a("p",[t._v("最后，更新源")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update "),a("span",{attrs:{class:"token comment"}},[t._v("# 更新源")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" upgrade "),a("span",{attrs:{class:"token comment"}},[t._v("# 更新软件")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("CentOS")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" /etc/yum.repos.d/\n"),a("span",{attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://mirrors.aliyun.com/repo/Centos-7.repo "),a("span",{attrs:{class:"token comment"}},[t._v("# 下载 repo")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("mv")]),t._v(" CentOs-Base.repo CentOs-Base.repo.bak "),a("span",{attrs:{class:"token comment"}},[t._v("# 备份")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("mv")]),t._v(" Centos-7.repo CentOs-Base.repo "),a("span",{attrs:{class:"token comment"}},[t._v("# 替换")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 更新")]),t._v("\nyum clean all\nyum makecache\nyum update\n")])])]),a("h3",{attrs:{id:"安装-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-nginx","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装 nginx")]),t._v(" "),a("p",[t._v("需要安装的依赖：")]),t._v(" "),a("ul",[a("li",[t._v("gcc gcc-c++")]),t._v(" "),a("li",[t._v("pcre")]),t._v(" "),a("li",[t._v("openssl")]),t._v(" "),a("li",[t._v("zlib")]),t._v(" "),a("li",[t._v("zlib-devel")])]),t._v(" "),a("p",[t._v("以上可以都用 yum 安装。安装完成之后 "),a("code",[t._v("yum install -y nginx")]),t._v(" 即可成功安装 nginx。如果以上依赖未完全安装，在安装 nginx 时则会提示某个包未安装。")]),t._v(" "),a("h3",{attrs:{id:"配置-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-nginx","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置 Nginx")]),t._v(" "),a("p",[t._v("根据版本的不同，nginx 的配置文件可以放在 site-enable 或者 conf.d 中。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("代理端口、域名")])]),t._v(" "),a("li",[a("p",[t._v("try_files")])]),t._v(" "),a("li",[a("p",[t._v("https")])]),t._v(" "),a("li",[a("p",[t._v("SSL 证书")])]),t._v(" "),a("li",[a("p",[t._v("强制转写为 https")])]),t._v(" "),a("li",[a("p",[t._v("强制转跳\n例如一级域名转跳到 www 二级域名")])])]),t._v(" "),a("h3",{attrs:{id:"部署服务端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署服务端","aria-hidden":"true"}},[t._v("#")]),t._v(" 部署服务端")]),t._v(" "),a("p",[t._v("我的项目服务端用的是 Koa2，托管在 bitbucket 上。")]),t._v(" "),a("ol",[a("li",[t._v("从 bitbucket 上将项目拉取下来。")]),t._v(" "),a("li",[a("code",[t._v("npm install")]),t._v(" 安装需要的 npm packages。")]),t._v(" "),a("li",[t._v("通过 pm2 启动服务，我的项目用的是 Koa2 的脚手架，使用命令 "),a("code",[t._v("pm2 start ./bin/www --watch")]),t._v(" 即可。")]),t._v(" "),a("li",[t._v("可以通过 "),a("code",[t._v("pm2 list")]),t._v(" 查看正在运行的服务，例如我有部署多个后端服务；通过 "),a("code",[t._v("pm2 describe ${id}")]),t._v(" 和 "),a("code",[t._v("pm2 show ${id}")]),t._v(" 可以查看某个服务的详情。")])]),t._v(" "),a("h3",{attrs:{id:"mongodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb","aria-hidden":"true"}},[t._v("#")]),t._v(" MongoDB")]),t._v(" "),a("p",[t._v("如果需要在本机（非服务器所在内网）测试访问 MongoDB，则需要修改 MonogoDB 配置。")]),t._v(" "),a("h2",{attrs:{id:"云解析-dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#云解析-dns","aria-hidden":"true"}},[t._v("#")]),t._v(" 云解析 DNS")]),t._v(" "),a("h2",{attrs:{id:"安全组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全组","aria-hidden":"true"}},[t._v("#")]),t._v(" 安全组")]),t._v(" "),a("h2",{attrs:{id:"ssl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssl","aria-hidden":"true"}},[t._v("#")]),t._v(" SSL")])])}],!1,null,null,null);n.options.__file="c-s-ops.md";s.default=n.exports}}]);